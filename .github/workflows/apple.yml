name: apple-xcframework

on:
  # push:
  #   branches: [master]
  # pull_request:
  #   branches: [master]
  workflow_dispatch:
    inputs:
      beta:
        type: boolean
        description: publish beta edition
        default: true
        required: false
jobs:
  build:
    name: build-apple-xcframework
    runs-on: macos-14

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          submodules: recursive
    - name: Prepare Beta Version
      if: ${{ inputs.beta == true }}
      run: |
        grep -m 1 VERSION_NAME= version.sh | awk -F = '{printf "VERSION=%s",$2}' | xargs > constants.env
        echo "RELEAE_DATE=$(TZ=UTC-8 date +'%y%m%d%H%M%S')" >> constants.env
        echo "TAG="$(grep "VERSION" constants.env | cut -d'=' -f2)"-beta-"$(grep "RELEAE_DATE" constants.env | cut -d'=' -f2) >> constants.env
        cat constants.env
    - name: Prepare Normal Version
      if: ${{ inputs.beta == false }}
      run: |
        grep -m 1 VERSION_NAME= version.sh | awk -F = '{printf "TAG=%s",$2}' | xargs > constants.env
        cat constants.env
    - name: Export Env
      uses: cardinalby/export-env-action@v2
      with:
        envFile: 'constants.env'
    - run: brew install tree
    - name: Download Pre Compiled Dependencies
      run: |
        ./FFToolChain/main.sh install -p ios -l 'ass ffmpeg'
        ./FFToolChain/main.sh install -p macos -l 'ass ffmpeg'
        ./FFToolChain/main.sh install -p tvos -l 'ass ffmpeg'
    - name: Build iOS Framework
      run:  ./examples/ios/build-framework.sh
    - name: Build macOS Framework      
      run: ./examples/macos/build-framework.sh
    - name: Build tvOS Framework
      run: ./examples/tvos/build-framework.sh
    - name: Make xcframework
      run: ./examples/xcframewrok/make-xcframework.sh
    - name: Make podspec
      run: ./examples/xcframewrok/make-podspec.sh "${{ env.TAG }}"
    - name: Make Distribution Resources
      run: |
        mkdir dist
        cp CHANGELOG.md dist 
        cp README.md dist
        cp COPYING.LGPLv3 dist/LICENSE
        cp -pPR examples/xcframewrok/FSPlayer.xcframework dist
        cd dist
        zip -ryq FSPlayer.zip ./*
    - name: Upload Release Asset
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        branch=$(git branch --show-current)
        gh release create ${{ env.TAG }} --target $branch -t "üëèüëè FSPlayer ${{ env.TAG }}" dist/FSPlayer.zip examples/xcframewrok/FSPlayer.spec.json